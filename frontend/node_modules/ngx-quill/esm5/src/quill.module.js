import * as tslib_1 from "tslib";
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { defaultModules } from './quill-defaults';
import { QuillEditorComponent } from './quill-editor.component';
import { QUILL_CONFIG_TOKEN } from './quill-editor.interfaces';
import { QuillViewHTMLComponent } from './quill-view-html.component';
import { QuillViewComponent } from './quill-view.component';
var ɵ0 = { modules: defaultModules };
var QuillModule = /** @class */ (function () {
    function QuillModule() {
    }
    QuillModule_1 = QuillModule;
    QuillModule.forRoot = function (config) {
        return {
            ngModule: QuillModule_1,
            providers: [
                {
                    provide: QUILL_CONFIG_TOKEN,
                    // tslint:disable-next-line:only-arrow-functions
                    useValue: config || { modules: defaultModules }
                }
            ]
        };
    };
    var QuillModule_1;
    QuillModule = QuillModule_1 = tslib_1.__decorate([
        NgModule({
            declarations: [
                QuillEditorComponent,
                QuillViewComponent,
                QuillViewHTMLComponent
            ],
            exports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent],
            imports: [CommonModule],
            providers: [
                {
                    provide: QUILL_CONFIG_TOKEN,
                    useValue: ɵ0
                }
            ]
        })
    ], QuillModule);
    return QuillModule;
}());
export { QuillModule };
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVpbGwubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LXF1aWxsLyIsInNvdXJjZXMiOlsic3JjL3F1aWxsLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFBO0FBQzlDLE9BQU8sRUFBdUIsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFBO0FBRTdELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQTtBQUNqRCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQTtBQUMvRCxPQUFPLEVBQUUsa0JBQWtCLEVBQWUsTUFBTSwyQkFBMkIsQ0FBQTtBQUMzRSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQTtBQUNwRSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQTtTQWEzQyxFQUFFLE9BQU8sRUFBRSxjQUFjLEVBQUU7QUFJM0M7SUFBQTtJQWFBLENBQUM7b0JBYlksV0FBVztJQUNmLG1CQUFPLEdBQWQsVUFBZSxNQUFvQjtRQUNqQyxPQUFPO1lBQ0wsUUFBUSxFQUFFLGFBQVc7WUFDckIsU0FBUyxFQUFFO2dCQUNUO29CQUNFLE9BQU8sRUFBRSxrQkFBa0I7b0JBQzNCLGdEQUFnRDtvQkFDaEQsUUFBUSxFQUFFLE1BQU0sSUFBSSxFQUFFLE9BQU8sRUFBRSxjQUFjLEVBQUU7aUJBQ2hEO2FBQ0Y7U0FDRixDQUFBO0lBQ0gsQ0FBQzs7SUFaVSxXQUFXO1FBZnZCLFFBQVEsQ0FBQztZQUNSLFlBQVksRUFBRTtnQkFDWixvQkFBb0I7Z0JBQ3BCLGtCQUFrQjtnQkFDbEIsc0JBQXNCO2FBQ3ZCO1lBQ0QsT0FBTyxFQUFFLENBQUMsb0JBQW9CLEVBQUUsa0JBQWtCLEVBQUUsc0JBQXNCLENBQUM7WUFDM0UsT0FBTyxFQUFFLENBQUMsWUFBWSxDQUFDO1lBQ3ZCLFNBQVMsRUFBRTtnQkFDVDtvQkFDRSxPQUFPLEVBQUUsa0JBQWtCO29CQUMzQixRQUFRLElBQTZCO2lCQUN0QzthQUNGO1NBQ0YsQ0FBQztPQUNXLFdBQVcsQ0FhdkI7SUFBRCxrQkFBQztDQUFBLEFBYkQsSUFhQztTQWJZLFdBQVciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nXG5pbXBvcnQgeyBNb2R1bGVXaXRoUHJvdmlkZXJzLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnXG5cbmltcG9ydCB7IGRlZmF1bHRNb2R1bGVzIH0gZnJvbSAnLi9xdWlsbC1kZWZhdWx0cydcbmltcG9ydCB7IFF1aWxsRWRpdG9yQ29tcG9uZW50IH0gZnJvbSAnLi9xdWlsbC1lZGl0b3IuY29tcG9uZW50J1xuaW1wb3J0IHsgUVVJTExfQ09ORklHX1RPS0VOLCBRdWlsbENvbmZpZyB9IGZyb20gJy4vcXVpbGwtZWRpdG9yLmludGVyZmFjZXMnXG5pbXBvcnQgeyBRdWlsbFZpZXdIVE1MQ29tcG9uZW50IH0gZnJvbSAnLi9xdWlsbC12aWV3LWh0bWwuY29tcG9uZW50J1xuaW1wb3J0IHsgUXVpbGxWaWV3Q29tcG9uZW50IH0gZnJvbSAnLi9xdWlsbC12aWV3LmNvbXBvbmVudCdcblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgUXVpbGxFZGl0b3JDb21wb25lbnQsXG4gICAgUXVpbGxWaWV3Q29tcG9uZW50LFxuICAgIFF1aWxsVmlld0hUTUxDb21wb25lbnRcbiAgXSxcbiAgZXhwb3J0czogW1F1aWxsRWRpdG9yQ29tcG9uZW50LCBRdWlsbFZpZXdDb21wb25lbnQsIFF1aWxsVmlld0hUTUxDb21wb25lbnRdLFxuICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlXSxcbiAgcHJvdmlkZXJzOiBbXG4gICAge1xuICAgICAgcHJvdmlkZTogUVVJTExfQ09ORklHX1RPS0VOLFxuICAgICAgdXNlVmFsdWU6IHsgbW9kdWxlczogZGVmYXVsdE1vZHVsZXMgfVxuICAgIH1cbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBRdWlsbE1vZHVsZSB7XG4gIHN0YXRpYyBmb3JSb290KGNvbmZpZz86IFF1aWxsQ29uZmlnKTogTW9kdWxlV2l0aFByb3ZpZGVycyB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5nTW9kdWxlOiBRdWlsbE1vZHVsZSxcbiAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICB7XG4gICAgICAgICAgcHJvdmlkZTogUVVJTExfQ09ORklHX1RPS0VOLFxuICAgICAgICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpvbmx5LWFycm93LWZ1bmN0aW9uc1xuICAgICAgICAgIHVzZVZhbHVlOiBjb25maWcgfHzCoHvCoG1vZHVsZXM6IGRlZmF1bHRNb2R1bGVzIH1cbiAgICAgICAgfVxuICAgICAgXVxuICAgIH1cbiAgfVxufVxuIl19